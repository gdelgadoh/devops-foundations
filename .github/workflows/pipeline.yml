name: Java CI/CD

on:
  push:
    branches: [ main ]
  pull_request: 
    branches: [ main ]
env:
  REPO: gdelgadoh/devops-foundations
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps: 
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Compile with Maven
      run: mvn -B clean compile   
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Sonar Scann analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar  
    - name: Package with Maven
      run: mvn -B clean package
    - uses: actions/upload-artifact@v2
      with:
        name: devops-foundation.jar
        path: target/*.jar      
    - name: jacoco-badge-generator
    # You may pin to the exact commit or the version.
    # uses: cicirello/jacoco-badge-generator@f74baf35e5842f3385eb9d223aefd957eadcba07
      uses: cicirello/jacoco-badge-generator@v2.2.1   
    - name: Commit the badge (if it changed)
      run: |
        if [[ `git status --porcelain` ]]; then
          git config --global user.name 'Guido Delgado H.'
          git config --global user.email 'guido.delgado@gmail.com'
          git add -A
          git commit -m "Autogenerated JaCoCo coverage badge"
          git push
        fi
    - name: Upload JaCoCo coverage report
      uses: actions/upload-artifact@v2
      with:
        name: jacoco-report
        path: target/site/jacoco/

    - name: Login to Dockerhub Registry
      uses: docker/login-action@v1
      with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
    - name: Build and push image
      env:
        CONTAINER_IMAGE: ${{env.REPO}}:${{github.sha}}
        CONTAINER_IMAGE_LATEST: "${{ env.REPO }}:latest"
      
      run: |
        docker build -t  $CONTAINER_IMAGE -t $CONTAINER_IMAGE_LATEST .  
        docker push $CONTAINER_IMAGE
        docker push $CONTAINER_IMAGE_LATEST
   
    - name: Scan image
      uses: anchore/scan-action@v2
      id: scan
      with:
        image: ${{env.REPO}}:${{github.sha}}
        acs-report-enable: true
        fail-build: true
    - name: upload Anchore scan SARIF report
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: ${{ steps.scan.outputs.sarif }}
    - name: Inspect action SARIF report
      run: cat ${{ steps.scan.outputs.sarif }}
    
    
